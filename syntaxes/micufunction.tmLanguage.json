{
  "scopeName": "source.micufunction",
  "fileTypes": ["micufunction"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#commands" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "match": "#.*",
          "name": "comment.line.micufunction"
        }
      ]
    },
    "commands": {
      "patterns": [
        {
          "match": "\\b(duration|else|if|unless)\\b",
          "name": "keyword.control.micufunction"
        },
        {
          "match": "\\b(wait|say|camera)\\b",
          "name": "entity.name.function.micufunction"
        },
        {
          "match": "\\bfunction\\b",
          "name": "keyword.other.micufunction"
        },
        {
          "name": "meta.command.micufunction",
          "begin": "^\\s*(command)\\s+",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.micufunction"
            }
          },
          "end": "$",
          "patterns": [
            {
              "include": "source.mcfunction"
            }
          ]
        },
        {
          "name": "meta.conditional.micufunction",
          "begin": "\\b(if|unless)\\b",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.micufunction"
            }
          },
          "end": "(?=\\{|$)",
          "patterns": [
            { "include": "#execute_if_subcommands" }
          ]
        },
        {
          "name": "meta.camera.micufunction",
          "begin": "\\bcamera\\b",
          "beginCaptures": {
            "1": {
              "name": "entity.name.function.micufunction"
            }
          },
          "end": "$",
          "patterns": [
            {
              "match": "\\b(setup|enable|pause|kill)\\b",
              "name": "keyword.control.micufunction"
            },
            {
              "match": "\\b(summon at|goto|slide to)\\b",
              "name": "keyword.control.micufunction"
            },
            {
              "match": "([\\d\\.]+ [\\d\\.]+ [\\d\\.]+)",
              "name": "constant.numeric.micufunction"
            }
          ]
        },
        {
          "match": "\\{[^}]*\\}",
          "name": "meta.block.micufunction"
        },
        {
          "match": "(?<=say\\s)<[^>]+>",
          "name": "entity.name.tag.micufunction"
        },
        {
          "match": "\\b(\\d+[st])\\b",
          "name": "constant.numeric.time.micufunction"
        },
        {
          "match": "\\b\\d+\\.\\d+\\b",
          "name": "constant.numeric.float.micufunction"
        },
        {
          "match": "\\b\\d+\\b",
          "name": "constant.numeric.integer.micufunction"
        }
      ]
    },
    "execute_if_subcommands": {
      "patterns": [
        {
          "name": "execute.if.biome.micufunction",
          "begin": "\\b(biome)\\b",
          "beginCaptures": {
            "1": { "name": "entity.name.micufunction" }
          },
          "end": "(?=\\{|$)",
          "patterns": [
            {
              "match": "\\b[a-z_:]+\\b",
              "name": "entity.name.function.micufunction"
            }
          ]
        },
        {
          "name": "execute.if.entity.micufunction",
          "begin": "\\b(entity)\\b",
          "beginCaptures": {
            "1": { "name": "entity.name.micufunction" }
          },
          "end": "(?=\\{|$)",
          "patterns": [
            {
              "match": "@[a-z]+",
              "name": "support.class.mcfunction"
            }
          ]
        },
        {
          "name": "execute.if.score.matches.micufunction",
          "begin": "\\b(score)\\b",
          "beginCaptures": {
            "1": { "name": "entity.name.micufunction" }
          },
          "end": "\\b(\\w+) (matches) ([\\d\\.]+)(?=\\{|$)",
          "endCaptures": {
            "1": { "name": "string.unquoted.micufunction" },
            "2": { "name": "entity.name.micufunction" },
            "3": { "name": "constant.numeric.micufunction" }
          }
        }
      ]
    }
  }
}